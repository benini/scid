
trigger:
- master
  
jobs:
- job: windows_tests
  pool:
    vmImage: 'windows-latest'
  steps:
  - script: |
      git config --global core.autocrlf false
    displayName: git config
  - checkout: self
    fetchDepth: 1
  - script: vcpkg.exe install tcl --triplet x64-windows
    displayName: vcpkg install dependencies
  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: '-A x64 -DGTEST=ON -DCMAKE_TOOLCHAIN_FILE=$(VCPKG_INSTALLATION_ROOT)/scripts/buildsystems/vcpkg.cmake ..'
  - task: MSBuild@1
    inputs:
      solution: 'build/ALL_BUILD.vcxproj'
      maximumCpuCount: true
      platform: 'x64'
      configuration: 'Debug'
  - script: build\gtest\Debug\scid_tests.exe
    displayName: run scid_tests.exe
  - script: choco install innosetup

- job: windows_latest
  pool:
    vmImage: 'windows-latest'
  steps:
  - script: |
      pushd "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
      for /f "delims=" %%x in ('.\vswhere.exe -latest -property InstallationPath') do set VSPATH=%%x
      popd
      call "%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" x64
      mkdir tcltk & cd tcltk
      git clone --branch core-8-6-10 https://github.com/tcltk/tcl.git
      cd tcl & cd win
      nmake -f makefile.vc INSTALLDIR=$(Build.SourcesDirectory)\install
      nmake -f makefile.vc install INSTALLDIR=$(Build.SourcesDirectory)\install
    displayName: Generate tcl library
  - script: |
      pushd "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
      for /f "delims=" %%x in ('.\vswhere.exe -latest -property InstallationPath') do set VSPATH=%%x
      popd
      call "%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" x64
      cd tcltk
      git clone --branch core-8-6-10 https://github.com/tcltk/tk.git
      cd tk & cd win
      nmake -f makefile.vc INSTALLDIR=$(Build.SourcesDirectory)\install
      nmake -f makefile.vc install INSTALLDIR=$(Build.SourcesDirectory)\install
    displayName: Generate tk library
  - script: |
      pushd "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
      for /f "delims=" %%x in ('.\vswhere.exe -latest -property InstallationPath') do set VSPATH=%%x
      popd
      call "%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" x64
      mkdir build & cd build
      cmake -G"NMake Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_INSTALL_PREFIX=../install ^
            -DTCL_INCLUDE_PATH=$(Build.SourcesDirectory)\install\include ^
            -DCMAKE_POLICY_DEFAULT_CMP0069=NEW -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON ^
             $(Build.SourcesDirectory)
      nmake /N install
      nmake install
    displayName: Generate SCID
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\install'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)'
  - task: PublishBuildArtifacts@1    
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'

- job: ubuntu_latest
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
       sudo apt-get update &&
       sudo apt-get -y install tcl-dev tk-dev
    displayName: download tclk
  - task: CMake@1
    inputs:
      workingDirectory: 'build'
      cmakeArgs: '-DGTEST=ON ..'
  - script: cmake --build build
  - script: build/gtest/scid_tests